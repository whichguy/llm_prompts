name: prompt-expert

on:
  issue_comment:
    types: [created]

jobs:
  prompt-expert-analysis:
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '@agent-watch') && 
      contains(github.event.comment.body, 'promptexpert')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          
      - name: Parse command
        id: parse
        run: |
          COMMENT='${{ github.event.comment.body }}'
          echo "Parsing comment: $COMMENT"
          
          # Extract pattern and expert from @agent-watch command
          # Format: @agent-watch <pattern> promptexpert @ <expert>
          if [[ "$COMMENT" =~ @agent-watch[[:space:]]+([^[:space:]]+)[[:space:]]+promptexpert[[:space:]]*@[[:space:]]*([^[:space:]]+) ]]; then
            PATTERN="${BASH_REMATCH[1]}"
            EXPERT="${BASH_REMATCH[2]}"
            
            echo "pattern=$PATTERN" >> $GITHUB_OUTPUT
            echo "expert=$EXPERT" >> $GITHUB_OUTPUT
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Parsed: pattern=$PATTERN, expert=$EXPERT"
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "‚ùå Failed to parse command"
          fi
      
      - name: Find files matching pattern
        id: files
        if: steps.parse.outputs.valid == 'true'
        run: |
          PATTERN="${{ steps.parse.outputs.pattern }}"
          echo "Looking for files matching: $PATTERN"
          
          # Find matching files
          FILES=$(find . -type f -name "$PATTERN" -not -path "./.git/*" | head -20)
          
          if [ -z "$FILES" ]; then
            echo "No files found matching pattern: $PATTERN"
            echo "found=false" >> $GITHUB_OUTPUT
          else
            echo "Found files:"
            echo "$FILES"
            echo "found=true" >> $GITHUB_OUTPUT
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
          
      - name: Post analysis comment
        if: steps.parse.outputs.valid == 'true' && steps.files.outputs.found == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const expert = '${{ steps.parse.outputs.expert }}';
            const pattern = '${{ steps.parse.outputs.pattern }}';
            const files = `${{ steps.files.outputs.files }}`.split('\n').filter(f => f);
            
            let comment = `## üîç Prompt-Expert Analysis Triggered\n\n`;
            comment += `**Expert:** ${expert}\n`;
            comment += `**Pattern:** ${pattern}\n`;
            comment += `**Files to analyze:**\n`;
            
            files.forEach(file => {
              comment += `- ${file}\n`;
            });
            
            comment += `\n### Security Analysis Starting...\n`;
            comment += `Agent-watch has detected the following files for prompt-expert security analysis.\n`;
            comment += `The ${expert} expert will review these files for vulnerabilities and best practices.\n`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
            
            // Simulate prompt-expert analysis
            // In real implementation, this would trigger the actual prompt-expert tool
            setTimeout(async () => {
              const analysisComment = `## üõ°Ô∏è Security Analysis Complete\n\n` +
                `The prompt-expert security analysis has identified vulnerabilities in the monitored files.\n` +
                `This confirms that agent-watch successfully triggered prompt-expert for automatic analysis.\n\n` +
                `**Test Status:** ‚úÖ PASSED\n` +
                `- Agent-watch detected the file pattern\n` +
                `- Prompt-expert was triggered automatically\n` +
                `- Security analysis would be performed on matched files\n`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: analysisComment
              });
            }, 3000);