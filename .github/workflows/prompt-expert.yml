name: Prompt Expert Integration

on:
  issue_comment:
    types: [created]

jobs:
  trigger-prompt-expert:
    if: |
      github.event.issue.pull_request && 
      contains(github.event.comment.body, '@agent-watch') && 
      contains(github.event.comment.body, 'promptexpert')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Parse command
        id: parse
        run: |
          COMMENT='${{ github.event.comment.body }}'
          
          # Extract pattern and expert from @agent-watch command
          # Format: @agent-watch <pattern> promptexpert @ <expert>
          if [[ "$COMMENT" =~ @agent-watch[[:space:]]+([^[:space:]]+)[[:space:]]+promptexpert[[:space:]]*@[[:space:]]*([^[:space:]]+) ]]; then
            PATTERN="${BASH_REMATCH[1]}"
            EXPERT="${BASH_REMATCH[2]}"
            
            echo "pattern=$PATTERN" >> $GITHUB_OUTPUT
            echo "expert=$EXPERT" >> $GITHUB_OUTPUT
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "Parsed: pattern=$PATTERN, expert=$EXPERT"
          else
            echo "valid=false" >> $GITHUB_OUTPUT
            echo "Failed to parse command"
          fi
      
      - name: Trigger PromptExpert
        if: steps.parse.outputs.valid == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const expert = '${{ steps.parse.outputs.expert }}';
            const pattern = '${{ steps.parse.outputs.pattern }}';
            
            // Post @promptexpert command
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `@promptexpert ${expert} analyze ${pattern} for security vulnerabilities, best practices, and improvements`
            });
            
            console.log(`Triggered PromptExpert with expert: ${expert}, pattern: ${pattern}`);